rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null &&
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'ADMIN');
    }

    // Ratings collection
    match /ratings/{ratingId} {
      allow read: if request.auth != null &&
        (resource.data.fromUserId == request.auth.uid ||
         resource.data.toUserId == request.auth.uid ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'ADMIN');
      allow write: if request.auth != null && request.auth.uid == resource.data.fromUserId;
    }

    // User rating stats collection
    match /user_rating_stats/{userId} {
      allow read: if request.auth != null &&
        (request.auth.uid == userId ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'ADMIN');
      allow write: if false; // Only server-side writes
    }

    // Pending ratings collection
    match /pending_ratings/{pendingId} {
      allow read: if request.auth != null && resource.data.fromUserId == request.auth.uid;
      allow write: if false; // Only server-side writes
    }

    // Drivers collection
    match /drivers/{driverId} {
      allow read: if request.auth != null; // Anyone can read driver profiles for matching
      allow write: if request.auth != null && request.auth.uid == driverId; // Drivers can update their own profile
    }

    // Bookings collection
    match /bookings/{bookingId} {
      allow read, write: if request.auth != null &&
        (resource.data.passengerId == request.auth.uid ||
         resource.data.driverId == request.auth.uid ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'ADMIN');
    }

    // Admin collections
    match /{document=**} {
      allow read, write: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'ADMIN';
    }
  }
}